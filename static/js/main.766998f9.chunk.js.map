{"version":3,"sources":["App.styles.ts","components/Balance.styles.ts","components/Balance.tsx","components/Token.styles.ts","utils/formatTokenAmount.ts","components/Token.tsx","components/TokenList.tsx","constraints/api.ts","App.tsx","constraints/walletAddress.ts","index.tsx"],"names":["useStyles","makeStyles","spacing","root","marginTop","marginBottom","total","marginLeft","loading","marginBottm","Balance","value","showIn","visible","styles","Grid","className","container","direction","justify","alignItems","Typography","variant","display","Web3","utils","fromWei","padding","address","paddingTop","paddingBottom","paddingLeft","paddingRight","addressButton","fontWeight","cursor","color","textDecoration","addSpaces","x","parts","toString","split","replace","join","Token","token","amount","name","symbol","decimals","useState","anchor","setAnchor","smallWidth","useMediaQuery","open","Boolean","id","undefined","Card","item","xs","length","newDecimal","integerPart","slice","otherPart","number","parseFloat","formatTokenAmount","onClick","event","currentTarget","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","TokenList","tokens","alignContent","tokensToShow","filter","t","map","key","web3","givenProvider","App","console","log","wallet","setWallet","balanceInWei","setBalanceInWei","setTokens","isLoading","setIsLoading","fetchTokens","a","axios","get","headers","process","responseTokens","data","payload","records","eth","getBalance","balance","alert","message","error","useEffect","Container","TextField","label","fullWidth","onChange","target","Button","CircularProgress","ReactDOM","render","StrictMode","StylesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.766998f9.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(({ spacing }) => ({\r\n  root: {\r\n    marginTop: spacing(2),\r\n    marginBottom: spacing(2),\r\n  },\r\n  total: {\r\n    marginLeft: spacing(2),\r\n  },\r\n  loading: {\r\n    marginTop: spacing(6),\r\n  },\r\n}));\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(({ spacing }) => ({\r\n  root: {\r\n    marginTop: spacing(2),\r\n    marginBottm: spacing(2),\r\n  },\r\n}));\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Web3 from 'web3';\r\nimport { useStyles } from './Balance.styles';\r\n\r\ninterface BalanceProps {\r\n  value: string;\r\n  showIn:\r\n    | 'noether'\r\n    | 'wei'\r\n    | 'kwei'\r\n    | 'Kwei'\r\n    | 'babbage'\r\n    | 'femtoether'\r\n    | 'mwei'\r\n    | 'Mwei'\r\n    | 'lovelace'\r\n    | 'picoether'\r\n    | 'gwei'\r\n    | 'Gwei'\r\n    | 'shannon'\r\n    | 'nanoether'\r\n    | 'nano'\r\n    | 'szabo'\r\n    | 'microether'\r\n    | 'micro'\r\n    | 'finney'\r\n    | 'milliether'\r\n    | 'milli'\r\n    | 'ether'\r\n    | 'kether'\r\n    | 'grand'\r\n    | 'mether'\r\n    | 'gether'\r\n    | 'tether';\r\n  visible: boolean;\r\n}\r\nconst Balance: React.FC<BalanceProps> = ({ value, showIn, visible }) => {\r\n  const styles = useStyles();\r\n  if (!visible) return null;\r\n  return (\r\n    <Grid\r\n      className={styles.root}\r\n      container\r\n      direction='row'\r\n      justify='center'\r\n      alignItems='center'\r\n    >\r\n      <Typography variant='h5' display='inline'>\r\n        {Web3.utils.fromWei(value, showIn)} {showIn}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Balance;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(({ spacing }) => ({\r\n  root: {\r\n    marginTop: spacing(1),\r\n    marginBottom: spacing(1),\r\n    padding: spacing(1),\r\n  },\r\n  address: {\r\n    paddingTop: spacing(0.5),\r\n    paddingBottom: spacing(0.5),\r\n    paddingLeft: spacing(1),\r\n    paddingRight: spacing(1),\r\n  },\r\n  addressButton: {\r\n    fontWeight: 100,\r\n    cursor: 'pointer',\r\n    color: '#20a3d6',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n","const addSpaces = (x: number) => {\r\n  let parts = x.toString().split('.');\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n  return parts.join('.');\r\n};\r\nexport const formatTokenAmount = (\r\n  value: string,\r\n  decimals: number,\r\n  newDecimal: number = decimals\r\n) => {\r\n  if (value.length < decimals) {\r\n    return value;\r\n  }\r\n  const integerPart = value.slice(0, value.length - decimals) || '0';\r\n  const otherPart = value.slice(value.length - decimals, value.length);\r\n  const number = parseFloat(integerPart + '.' + otherPart.slice(0, newDecimal)); // Removing zeros at the end\r\n\r\n  return addSpaces(number);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, Grid, Typography, Popover } from '@material-ui/core';\r\nimport { TokenResponce } from '../types/api';\r\nimport { useStyles } from './Token.styles';\r\nimport { formatTokenAmount } from '../utils/formatTokenAmount';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\ninterface TokenProps {\r\n  token: TokenResponce;\r\n}\r\n\r\nconst Token: React.FC<TokenProps> = ({ token }) => {\r\n  const { amount, name, symbol, decimals, address } = token;\r\n  const [anchor, setAnchor] = useState<HTMLSpanElement | null>(null);\r\n  const styles = useStyles();\r\n  const smallWidth = useMediaQuery('(max-width:600px)');\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchor(null);\r\n  };\r\n\r\n  const open = Boolean(anchor);\r\n  const id = open ? address : undefined;\r\n  return (\r\n    <Card className={styles.root}>\r\n      <Grid container alignItems='center' spacing={2}>\r\n        <Grid item xs={6}>\r\n          <Typography variant='overline' color='textSecondary'>\r\n            {symbol}\r\n          </Typography>{' '}\r\n          {name.length ? (\r\n            name\r\n          ) : (\r\n            <Typography color='textSecondary'>Name was not provided</Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={6}\r\n          direction='row'\r\n          justify='space-between'\r\n          alignItems='flex-end'\r\n        >\r\n          <span>\r\n            {formatTokenAmount(amount, decimals, smallWidth ? 2 : decimals)}\r\n          </span>\r\n          <span className={styles.addressButton} onClick={handleClick}>\r\n            address\r\n          </span>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchor}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'center',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            }}\r\n          >\r\n            <Typography variant='overline' className={styles.address}>\r\n              {address}\r\n            </Typography>\r\n          </Popover>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\nexport default Token;\r\n","import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ethDevAddress } from '../constraints/api';\r\nimport { TokenResponce } from '../types/api';\r\nimport Token from './Token';\r\n\r\ninterface TokenListProps {\r\n  tokens: TokenResponce[];\r\n  visible: boolean;\r\n}\r\n\r\nconst TokenList: React.FC<TokenListProps> = ({ visible, tokens }) => {\r\n  if (!visible) return null;\r\n  if (tokens.length === 0) {\r\n    return (\r\n      <Grid container justify='center' alignContent='center'>\r\n        Total: 0. Nothing to display\r\n      </Grid>\r\n    );\r\n  }\r\n  const tokensToShow = tokens.filter((t) => t.address !== ethDevAddress);\r\n  return (\r\n    <>\r\n      <Typography>Total: {tokens.length}</Typography>\r\n      {tokensToShow.map((t) => (\r\n        <Token key={t.address} token={t} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default TokenList;\r\n","export const apiKey = process.env.REACT_APP_AMBERDATA_API;\r\n\r\nexport const web3url = 'https://web3api.io/api/v2';\r\n\r\nexport const infuraProvider =\r\n  'https://mainnet.infura.io/v3/e3ffd1b57bec405e80c0eb01e9034562';\r\n\r\nexport const ethDevAddress = '0x131a99859a8bfa3251d899f0675607766736ffae';\r\n","import React, { useState, useEffect } from 'react';\nimport { useStyles } from './App.styles';\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  Grid,\n  TextField,\n} from '@material-ui/core';\nimport { walletAddress } from './constraints/walletAddress';\nimport axios from 'axios';\nimport { apiKey, infuraProvider, web3url } from './constraints/api';\nimport { TokenResponce } from './types/api';\n\nimport Balance from './components/Balance';\nimport Web3 from 'web3';\nimport TokenList from './components/TokenList';\n\nconst web3 = new Web3(Web3.givenProvider || infuraProvider);\n\nconst App: React.FC = () => {\n  const styles = useStyles();\n  console.log(styles);\n  const [wallet, setWallet] = useState(walletAddress);\n  const [balanceInWei, setBalanceInWei] = useState<string>('');\n  const [tokens, setTokens] = useState<TokenResponce[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchTokens = async () => {\n    try {\n      setIsLoading(true);\n      // Getting tokens from address\n      const responseTokens = await axios.get(\n        `${web3url}/addresses/${wallet}/token-balances/latest`,\n        {\n          headers: { 'x-api-key': apiKey },\n        }\n      );\n      setTokens(responseTokens.data?.payload?.records);\n\n      // Getting eth balance\n      const balance = await web3.eth.getBalance(wallet);\n      setBalanceInWei(balance);\n    } catch (error) {\n      alert(`${error.message}, try again`);\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      fetchTokens();\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Container>\n      <TextField\n        className={styles.root}\n        label='Address'\n        fullWidth\n        value={wallet}\n        onChange={({ target }) => setWallet(target.value)}\n      />\n      <Grid container direction='row' justify='center' alignItems='center'>\n        <Button variant='contained' color='primary' onClick={fetchTokens}>\n          Get Balance\n        </Button>\n      </Grid>\n      {isLoading && (\n        <Grid\n          className={styles.loading}\n          container\n          direction='row'\n          justify='center'\n          alignItems='center'\n        >\n          <CircularProgress />\n        </Grid>\n      )}\n      <Balance\n        visible={!isLoading}\n        value={balanceInWei || '0'}\n        showIn='ether'\n      />\n      <TokenList visible={!isLoading} tokens={tokens} />\n    </Container>\n  );\n};\n\nexport default App;\n","export const walletAddress = '0xa145ac099e3d2e9781c9c848249e2e6b256b030d';\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StylesProvider } from '@material-ui/styles';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider>\n      <App />\n    </StylesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}